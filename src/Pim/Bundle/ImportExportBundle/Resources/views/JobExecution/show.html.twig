{% import 'PimUIBundle:Default:page_elements.html.twig' as elements %}

{% block content %}

    {% set title = "execution details"|trans ~ ' - ' ~ execution.jobInstance.label ~ ' [' ~
                   execution.jobInstance.code ~ ']' %}

    {% set buttons %}
        {{ elements.backLink(indexRoute) }}
        <span id="archives"></span>
        <span id="log"></span>
        {{ elements.link('Show profile', path(show_profile_route, { 'id': execution.jobInstance.id })) }}
    {% endset %}

    {% set left %}
        <ul class="inline" id="status">
           <li>{{ 'Status'|trans }}: ...</li>
       </ul>
    {% endset %}

    {{ elements.page_header(title, buttons, '', left) }}

    <div class="container-fluid grid-container">
        <img src="{{ asset('bundles/pimimportexport/images/loading.gif') }}" alt="{{ 'Loading ...'|trans }}" class="transparent loading" />
        {{ elements.link('Refresh', path(refresh_route, { 'id': execution.id }), { icon: 'refresh', class: 'transparent loading btn-mini' }) }}
        <table class="table table-bordered groups" id="job-execution">
            <thead>
                <th>{{ 'Step' | trans | upper }}</th>
                <th>{{ 'Status' | trans | upper }}</th>
                <th>{{ 'Summary' | trans | upper }}</th>
                <th>{{ 'Start' | trans | upper }}</th>
                <th>{{ 'End' | trans | upper }}</th>
            </thead>
            <tbody>
                <tr>
                    <td colspan="5">{{ 'Collecting data about job execution...'|trans }}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <script type="text/javascript">
        require(
            ['jquery', 'pim/job-execution-view'],
            function($, jobExecutionView){
                'use strict';

                $(function () {
                    jobExecutionView.init({
                        loadingImageSelector:          'img.loading',
                        refreshButtonSelector:         'a.loading',
                        jobExecutionSelector:          '#job-execution tbody',
                        jobExecutionStatusSelector:    '#status',
                        jobExecutionButtonsSelector:   '.navbar-buttons #archives',
                        jobExecutionLogButtonSelector: '.navbar-buttons #log',

                        statusLabel:   '{{ 'Status'|trans }}',
                        downloadLabel: '{{ 'Download log'|trans }}',

                        path:              '{{ path(refresh_route, {id:  execution.id, _format:  'json'}) }}',
                        executionId:       {{ execution.id }},
                        downloadFileRoute: '{{ download_file_route }}',
                        downloadLogRoute:  '{{ download_log_route }}'
                    });
                });
            }
        );
    </script>
{% endblock %}
